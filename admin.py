from aiogram import F, Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from states import PuzzleForm
from database import save_puzzle
from config import ADMIN_ID
from keyboards import admin_kb

router = Router()

@router.message(F.text == "üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã", F.from_user.id == ADMIN_ID)
async def show_commands(message: Message):
    cmds = [
        "üîß <b>–ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:</b>",
        "/add_puzzle - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥–∞–¥–∫—É",
        "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "/broadcast - –†–∞—Å—Å—ã–ª–∫–∞",
        "/restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"
    ]
    await message.answer("\n".join(cmds), reply_markup=admin_kb())

@router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥–∞–¥–∫—É", F.from_user.id == ADMIN_ID)
async def add_puzzle_start(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∑–∞–≥–∞–¥–∫–∏ (–ì–ì–ì–ì-–ú–ú-–î–î):")
    await state.set_state(PuzzleForm.waiting_for_date)
